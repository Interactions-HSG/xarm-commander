syntax = "proto3";

package xapi;

// See xArm-CPLUS-SDK/include/xarm/wrapper/xarm_api.h
// this service exposes an XArmAPI class object

service XAPI {
  
  // Connection specific services
  rpc Initialize (InitParam) returns (Empty);
  rpc Disconnect (Empty) returns (Empty);
  
  // Read services
  rpc GetCollisionSensitivity (Empty) returns (CollisionSensitivity);
  rpc GetTeachSensitivity (Empty) returns (TeachSensitivity);

  rpc GetVersion (Empty) returns (Version);
  rpc GetState (Empty) returns (State);
  rpc GetCmdnum (Empty) returns (Cmdnum);
  rpc GetServoAngles (Empty) returns (ServoAngles);
  rpc GetPosition (Empty) returns (Position);

  // Write services
  rpc SetMotionEnable (MotionEnable) returns (MotionEnable);
  rpc SetState (State) returns (State);
  rpc SetMode (Mode) returns (Mode);
  rpc SetCollisionSensitivity (CollisionSensitivity) returns (CollisionSensitivity);
  rpc SetTeachSensitivity (TeachSensitivity) returns (TeachSensitivity);

  rpc SetPosition (Position) returns (Position);
  rpc SetServoAngles (ServoAngles) returns (ServoAngles);
  rpc MoveCircle (MoveCircleMsg) returns (MoveCircleMsg);

  rpc Reset (ResetMsg) returns (Empty);
  rpc EmergencyStop (Empty) returns (Empty);

  rpc GetInverseKinematics (Position) returns (ServoAngles);
  rpc GetForwardKinematics (ServoAngles) returns (Position);

  rpc GetSimulationRobot (Empty) returns (SimulationRobot);
  rpc SetSimulationRobot (SimulationRobot) returns (SimulationRobot);


}

message Empty {
}

message InitParam {
  string ip_address = 1;
  bool is_radian = 2;
  bool do_not_open = 3;
  bool check_tcp_limit = 4;
  bool check_joint_limit = 5;
  bool check_cmdnum_limit = 6;
  bool check_robot_sn = 7;
  bool check_is_ready = 8;
  bool check_is_pause = 9;
  int32 max_callback_thread_count = 10;
  int32 max_cmdnum = 11;
  int32 init_axis = 12;
  bool debug = 13;
  string report_type = 14;
}

message CollisionSensitivity{
  int32 status_code = 1;
  int32 collision_sensitivity = 2;
}

message TeachSensitivity{
  int32 status_code = 1;
  int32 teach_sensitivity = 2;
}

message Version {
  int32 status_code = 1;
  string version = 2;
}

message State {
  int32 status_code = 1;
  int32 state = 2;
}

message Cmdnum {
  int32 status_code = 1;
  int32 cmdnum = 2;
}

message Position {
  // TODO(jo-bru): add oneof to handle polymorphism
  int32 status_code = 1;
  float x = 2;
  float y = 3;
  float z = 4;
  float roll = 5;
  float pitch = 6;
  float yaw = 7;
  bool wait = 8;
}

message ServoAngles {
  // TODO(jo-bru): add oneof to handle polymorphism
  int32 status_code = 1;
  float servo_1 = 2;
  float servo_2 = 3;
  float servo_3 = 4;
  float servo_4 = 5;
  float servo_5 = 6;
  float servo_6 = 7;
  float servo_7 = 8;
  bool wait = 9;
}


message MotionEnable {
  int32 status_code = 1;
  int32 enable = 2;
  int32 servo_id = 3;
}

message Mode {
  int32 status_code = 1;
  int32 mode = 2;
}

message MoveCircleMsg {
  int32 status_code = 1;
  Position pose_1 = 2;
  Position pose_2 = 3;
  float percent = 4;
  float speed = 5;
  float acc = 6;
  bool wait = 7;
  float timeout = 8;
}

message ResetMsg {
  int32 status_code = 1;
  bool wait = 2;
  float timeout = 3;
}

message SimulationRobot{
  int32 status_code = 1;
  bool on = 2;
}

// See the definition of the status_code at
// https://github.com/xArm-Developer/xArm-CPLUS-SDK/blob/master/doc/xarm_api_code.md
message Status {
  int32 code = 1;
}
